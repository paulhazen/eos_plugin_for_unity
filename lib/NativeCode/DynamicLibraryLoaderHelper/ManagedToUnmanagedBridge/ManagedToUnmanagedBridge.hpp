#pragma once

using namespace System;

/**
 * Reference the dll generated by the managed plugin code project - which
 * points to the C# files within the Unity project that are used to read and
 * determine configuration values.
 */
#using <ManagedPluginCode.dll>

namespace pew::eos::tests {
    using namespace Epic::OnlineServices::Platform;
    using namespace PlayEveryWare::EpicOnlineServices::Utility;

    /**
     * \brief This ref class is used to call a function defined in managed code
     * from an unmanaged (native) context.
     */
    public ref class NativeTestUtilityBridge
    {
    public:
        /**
         * \brief Get the windows options - as determined by the product and
         * windows config values set out in the JSON configuration files.
         * \return A proxy object that points to the WindowsOptions whose values
         * have been determined by the managed (C#) plugin code.
         */
        static WindowsOptions^ get_windows_options()
        {
            return ConfigurationUtility::GetEOSCreateOptions()->options;
        }

        /**
         * \brief Get the InitializeOptions - as determined by the product and
         * windows config values set out in the JSON configuration files.
         * \return A proxy object that points to the InitializeOptions whose
         * values have been determined by the managed (C#) plugin code.
         */
        static InitializeOptions^ get_initialize_options()
        {
            return ConfigurationUtility::GetEOSInitializeOptions()->options;
        }
	};
}
